openapi: 3.0.0
info:
  version: 1.0.0
  title: API de Cliente

paths:
  /clientes:
    get:
      summary: Retorna todos os clientes cadastrados
      responses:
        '200':
          description: Lista de todos os clientes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClienteResponse'
        default:
          description: Description default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'                  
    post:
      summary: Cria um novo cliente
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '201':
          description: Cliente criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteResponse'
        default:
          description: Description default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'                

  /clientes/{id}:
    get:
      summary: Retorna um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser buscado
          schema:
            type: string
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteResponse'
        '404':
          description: Cliente não encontrado
    put:
      summary: Atualiza um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser atualizado
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClienteRequest'
      responses:
        '200':
          description: Cliente atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClienteResponse'
        '404':
          description: Cliente não encontrado
    delete:
      summary: Deleta um cliente pelo ID
      parameters:
        - in: path
          name: id
          required: true
          description: ID do cliente a ser deletado
          schema:
            type: string
      responses:
        '204':
          description: Cliente deletado com sucesso
        '404':
          description: Cliente não encontrado
          
  /resiliencia/retry{attempts}:    
    get:
      summary: Testa quantidade de tentativas, erra quanto request < attempts
      operationId: getTestRetry
      parameters:
        - in: path
          name: attempts
          required: true
          description: attempts numero de tentativas
          schema:
            type: int
      responses:
        '200':
          description: Descrição da chamada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        default:
          description: Description default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'
                
  /resiliencia/exceptions{statusCodeErro}:    
    get:
      summary: Testa o tipo de erro para usar na resiliencia do client
      operationId: getTestErroByStatus
      parameters:
        - in: path
          name: statusCodeErro
          required: true
          description: statusCodeErro um número inteiro correspondete ao status code
          schema:
            type: int
      responses:
        '200':
          description: Descrição da resposta
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericResponse'
        default:
          description: Description default
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralError'                
components:
  schemas:
    GeneralError:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        timestamp:
          type: string
          format: date-time  
          
    GenericResponse:
      type: object
      properties:
        description:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date-time            
          
    EnderecoRequest:
      type: object
      properties:
        logradouro:
          type: string
        estado:
          type: string
        municipio:
          type: string
        bairro:
          type: string
        cep:
          type: string
        complemento:
          type: string
        principal:
          type: boolean  

    TelefoneRequest:
      type: object
      properties:
        ddd:
          type: string
        numero:
          type: string
        tipo:
          type: string
          enum: ['comercial', 'residencial', 'contato', 'celular', 'emergencia']
        principal:
          type: boolean

    ClienteRequest:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        sobrenome:
          type: string
        email:
          type: string
        sexo:
          type: string
          enum: ['masculino', 'feminino']
        datanascimento:
          type: string
        enderecos:
          type: array
          items:
            $ref: '#/components/schemas/EnderecoRequest'
        telefones:
          type: array
          items:
            $ref: '#/components/schemas/TelefoneRequest'

    ClienteResponse:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        sobrenome:
          type: string
        email:
          type: string
        sexo:
          type: string
          enum: ['masculino', 'feminino']
        datanascimento:
          type: string    
             
    ResilienteResponse:
      type: object
      properties:
        id:
          type: string
        nome:
          type: string
        timestamp:
          type: string
          format: date-time   
          

            
